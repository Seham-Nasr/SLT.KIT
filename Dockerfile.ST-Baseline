From nvidia/cuda
# From nvidia/cuda:8.0-devel

#PyTorch
RUN apt-get update && apt-get install -y python-pip python-dev build-essential libyaml-dev git wget xml-twig-tools libsort-naturally-perl default-jre sox cmake
RUN pip install --upgrade pip
RUN pip install http://download.pytorch.org/whl/cu90/torch-0.3.0.post4-cp27-cp27mu-linux_x86_64.whl 
RUN pip install torchvision
RUN pip install -U numpy
RUN pip install nltk

RUN cd /opt && \
    git clone https://github.com/quanpn90/OpenNMT-py -b MultiLingual
RUN cd /opt && \
    git clone https://github.com/jniehues-kit/SLT.KIT.git

RUN cd /opt && \
    git clone https://github.com/moses-smt/mosesdecoder.git

RUN cd /opt && \
    git clone https://github.com/rsennrich/subword-nmt.git

RUN cd /opt && \
    wget http://www.cs.umd.edu/%7Esnover/tercom/tercom-0.7.25.tgz && \
    tar xfvz tercom-0.7.25.tgz

RUN cd /opt && wget https://raw.githubusercontent.com/stanojevic/beer/master/packaged/beer_2.0.tar.gz && tar xfvz beer_2.0.tar.gz
RUN cd /opt && git clone https://github.com/rwth-i6/CharacTER.git
RUN cd /opt && wget https://www-i6.informatik.rwth-aachen.de/web/Software/mwerSegmenter.tar.gz && tar xzvf mwerSegmenter.tar.gz

# Speaker Diarization
RUN cd /opt && \
    wget http://lium3.univ-lemans.fr/diarization/lib/exe/fetch.php/lium_spkdiarization-8.4.1.jar.gz && \
    gunzip lium_spkdiarization-8.4.1.jar.gz

# XNMT
RUN wget https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh
RUN chmod 755 Anaconda3*.sh 
RUN ./Anaconda3*.sh -b
RUN /root/anaconda3/bin/pip install --upgrade pip
RUN cd /opt && git clone https://github.com/neulab/xnmt.git && cd /opt/xnmt && /root/anaconda3/bin/pip install -r requirements.txt && /root/anaconda3/bin/pip install -r requirements-extra.txt && /root/anaconda3/bin/python setup.py install

# PYTORCH-CTC
## warp-ctc and pytorch binding
RUN /root/anaconda3/bin/pip install torch torchvision editdistance
RUN cd /opt && \
    git clone https://github.com/SeanNaren/warp-ctc/
RUN mkdir /opt/warp-ctc/build && cd /opt/warp-ctc/build && cmake .. && make
RUN export CUDA_HOME="/usr/local/cuda" && cd /opt/warp-ctc/pytorch_binding && /root/anaconda3/bin/python setup.py install
## pytorch-ctc
#RUN cd /opt && \
#    git clone -b iwslt ssh://tzenkel@rg3hpc1:/project/iwslt2015/EN/LM-tests/pytorch_ctc

#docker run -ti --rm --runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=2 nvidia/cuda
